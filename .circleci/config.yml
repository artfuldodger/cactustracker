# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  test:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/ruby:3.3.3-browsers
        environment:
          PG_HOST: localhost
          PG_USER: circleci
          RAILS_ENV: test
          RACK_ENV: test
          CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      - image: cimg/postgres:16.1
        environment:
          POSTGRES_DB: cactus_tracker_test
          POSTGRES_USER: circleci
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundler-cache-v4-{{ checksum "Gemfile.lock" }}
            - bundler-cache-v4-
      - run:
          name: Install libvips
          command: sudo apt-get update && sudo apt-get install libvips
      - run:
          name: bundle install
          command: bundle check || bundle install --without=development
      - save_cache:
          key: bundler-cache-v4-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
            - ~/.bundle
      # - run:
      #     name: rubocop
      #     command: if [[ "$CIRCLE_NODE_INDEX" == "0" ]] ; then bundle exec rubocop ; fi
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: db setup
          command: bundle exec rake db:create db:schema:load --trace
      - run:
          name: rspec tests to run
          command: shopt -s globstar && echo $(circleci tests glob spec/**/*_spec.rb | circleci tests split --split-by=timings)
      - run:
          name: rspec
          command: shopt -s globstar && bundle exec rspec --format progress --format RspecJunitFormatter --out $CIRCLE_TEST_REPORTS/rspec.xml $(circleci tests glob spec/**/*_spec.rb | circleci tests split --split-by=timings)
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-test-results
      # - store_artifacts:
      #     path: ~/project/tmp/capybara
      #     destination: test-screenshots

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  test-workflow:
    jobs:
      - test
